# Update commit status in GitHub
updateCommitStatus: &UPDATE_COMMIT_STATUS
  onStart:
    - update_commit_status jfrog_cli_plugins_reg_git4 --context "$step_name"
  onComplete:
    - update_commit_status jfrog_cli_plugins_reg_git4 --context "$step_name"

commonConfiguration: &COMMON_CONFIGURATION
  inputResources:
    - name: jfrog_cli_plugins_reg_git4

resources:
  - name: buildJfrogCliPluginGit2
    type: GitRepo
    configuration:
      path: Or-Gabay/jfrog-cli-plugins-reg
      gitProvider: or_cli_github
      buildOn:
        # Manually trigger only
        commit: false
      branches:
        # Only build on the master
        include: master
      files:
        include: ^plugins\/.+
  - name: jfrog_cli_plugins_reg_git4
    type: GitRepo
    configuration:
      path: Or-Gabay/jfrog-cli-plugins-reg
      gitProvider: or_cli_github
      buildOn:
        commit: false
        pullRequestCreate: true
      branches:
        include: master
      files:
        include: ^plugins\/.+

pipelines:
  - name: build_jfrog_cli_plugin
    steps:
      - name: BuildAndPush
        type: Bash
        configuration:
          integrations:
            - name: releases_jfrog
          inputResources:
            - name: buildJfrogCliPluginGit2
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.4"
          environmentVariables:
            CI: "true"
            JFROG_CLI_PLUGINS_REGISTRY_URL: "https://releases.jfrog.io/artifactory"
            # Repo name in artifactory
            JFROG_CLI_PLUGINS_REGISTRY_REPO: "jfrog-cli-plugins"
            JFROG_CLI_PLUGIN_PLUGIN_NAME: "plugin-name"
            JFROG_CLI_PLUGIN_DOMAIN_NAME: "jfrog"
            JFROG_CLI_PLUGIN_REPO_NAME: "jfrog-cli-plugins"
            JFROG_CLI_PLUGIN_RELATIVE_PATH: "blank-if-in-root"
            JFROG_CLI_PLUGIN_VERSION: "v1.0.0"
        execution:
          onStart:
            - update_commit_status buildJfrogCliPluginGit2 --context "$step_name"
          onExecute:
            # Clone plugin repo.
            - git clone https://github.com/$JFROG_CLI_PLUGIN_DOMAIN_NAME/$JFROG_CLI_PLUGIN_REPO_NAME
            # Copy the plugin release script from registry repo to plugin repo.
            - cp "$res_buildJfrogCliPluginGit2_resourcePath/pipelinesScripts/pluginRelease.sh" "./$JFROG_CLI_PLUGIN_REPO_NAME/$JFROG_CLI_PLUGIN_RELATIVE_PATH"
            - pushd $JFROG_CLI_PLUGIN_REPO_NAME/$JFROG_CLI_PLUGIN_RELATIVE_PATH
            - env -i PATH=$PATH HOME=$HOME PWD=$PWD CI=$CI \
              JFROG_CLI_PLUGINS_REGISTRY_URL=$JFROG_CLI_PLUGINS_REGISTRY_URL \
              JFROG_CLI_PLUGINS_REGISTRY_REPO=$JFROG_CLI_PLUGINS_REGISTRY_REPO \
              JFROG_CLI_PLUGIN_PLUGIN_NAME=$JFROG_CLI_PLUGIN_PLUGIN_NAME \
              JFROG_CLI_PLUGIN_VERSION=$JFROG_CLI_PLUGIN_VERSION \
              bash "./pluginRelease.sh"
            - popd
          onComplete:
            - update_commit_status buildJfrogCliPluginGit2 --context "$step_name"

  - name: or_plugin_validation
    configuration:
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog-ecosystem-integration-env
            tag: 1.0.0
    steps:
      # Validate PR contains only the plugin descriptor
      - name: PR_includes_only_plugin_descriptor
        type: Bash
        configuration:
          <<: *COMMON_CONFIGURATION
        execution:
          <<: *UPDATE_COMMIT_STATUS
          onExecute:
            - cd $res_jfrog_cli_plugins_reg_git4_resourcePath/pipelinesScripts/validator
            - env -i PATH=$PATH HOME=$HOME PWD=$PWD JAVA_HOME=$JAVA_HOME GRADLE_HOME=$GRADLE_HOME MAVEN_HOME=$MAVEN_HOME go run validator.go extension
      # Validate plugin descriptor yml
      - name: Plugin_descriptor_structure_is_valid
        type: Bash
        configuration:
          <<: *COMMON_CONFIGURATION
          inputSteps:
            - name: PR_includes_only_plugin_descriptor
        execution:
          <<: *UPDATE_COMMIT_STATUS
          onExecute:
            - cd $res_jfrog_cli_plugins_reg_git4_resourcePath/pipelinesScripts/validator
            - env -i PATH=$PATH HOME=$HOME PWD=$PWD JAVA_HOME=$JAVA_HOME GRADLE_HOME=$GRADLE_HOME MAVEN_HOME=$MAVEN_HOME go run validator.go structure
      # Run `go vet ./...` and `go test ./...`
      - name: Plugin_tests_passed
        type: Bash
        configuration:
          <<: *COMMON_CONFIGURATION
          inputSteps:
            - name: Plugin_descriptor_structure_is_valid
        execution:
          <<: *UPDATE_COMMIT_STATUS
          onExecute:
            - cd $res_jfrog_cli_plugins_reg_git4_resourcePath/pipelinesScripts/validator
            - env -i PATH=$PATH HOME=$HOME PWD=$PWD JAVA_HOME=$JAVA_HOME GRADLE_HOME=$GRADLE_HOME MAVEN_HOME=$MAVEN_HOME go run validator.go tests
